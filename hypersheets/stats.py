# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_stats.ipynb.

# %% auto 0
__all__ = ['compsum', 'comp', 'expected_return', 'geometric_mean', 'ghpr', 'foo']

# %% ../nbs/01_stats.ipynb 4
def compsum(returns):
    """Calculates cumulative compounded returns up to each day, for series of daily returns"""
    return returns.add(1).cumprod() -1

# %% ../nbs/01_stats.ipynb 6
def comp(returns):
    """Calculates total compounded return, for series of daily returns"""
    return returns.add(1).prod() -1

# %% ../nbs/01_stats.ipynb 9
def expected_return(returns, aggregate=None, compounded=True,
                    prepare_returns=True):
    """
    Returns the expected geometric return for a given period
    by calculating the geometric holding period return
    """
    # if prepare_returns:
    #     returns = utils.prepare_returns(returns)
    # returns = utils.aggregate_returns(returns, aggregate, compounded)
    return np.product(1 + returns) ** (1 / len(returns)) - 1

# %% ../nbs/01_stats.ipynb 12
def geometric_mean(retruns, aggregate=None, compounded=True):
    """Shorthand for expected_return()"""
    return expected_return(retruns, aggregate, compounded)


def ghpr(retruns, aggregate=None, compounded=True):
    """Shorthand for expected_return()"""
    return expected_return(retruns, aggregate, compounded)

# %% ../nbs/01_stats.ipynb 13
def foo(): pass
